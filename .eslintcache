[{"/home/mourya/Desktop/React-Infinite-Image-Gallery/src/index.js":"1","/home/mourya/Desktop/React-Infinite-Image-Gallery/src/reportWebVitals.js":"2","/home/mourya/Desktop/React-Infinite-Image-Gallery/src/App.js":"3","/home/mourya/Desktop/React-Infinite-Image-Gallery/src/components/Heading.js":"4","/home/mourya/Desktop/React-Infinite-Image-Gallery/src/components/Loader.js":"5","/home/mourya/Desktop/React-Infinite-Image-Gallery/src/components/UnsplashImage.js":"6","/home/mourya/Desktop/React-Infinite-Image-Gallery/src/components/ImageComponent.js":"7"},{"size":500,"mtime":1608103689491,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1608103689491,"results":"10","hashOfConfig":"9"},{"size":4078,"mtime":1608103689491,"results":"11","hashOfConfig":"9"},{"size":485,"mtime":1608103689491,"results":"12","hashOfConfig":"9"},{"size":802,"mtime":1608103689491,"results":"13","hashOfConfig":"9"},{"size":1021,"mtime":1608103689491,"results":"14","hashOfConfig":"9"},{"size":3000,"mtime":1608455600003,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1s9j35y",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mourya/Desktop/React-Infinite-Image-Gallery/src/index.js",[],["33","34"],"/home/mourya/Desktop/React-Infinite-Image-Gallery/src/reportWebVitals.js",[],"/home/mourya/Desktop/React-Infinite-Image-Gallery/src/App.js",["35","36","37"],"import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport { Heading } from './components/Heading';\nimport { Loader } from './components/Loader';\nimport { UnsplashImage } from './components/UnsplashImage';\nimport { ImageComponent } from './components/ImageComponent';\nimport styled from 'styled-components'\nimport { createGlobalStyle } from 'styled-components'\nimport axios from 'axios';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { render } from '@testing-library/react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  body {\n    font-family: sans-serif;\n  }\n`;\n\nconst WrapperImages = styled.section`\n  max-width: 70rem;\n  margin: 4rem auto;\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  grid-auto-rows: 300px;\n`;\n\nconst Input = styled.input`\n    height: 2.5rem;\n    width: 20rem;\n    margin-top: 1em;\n    outline: none;\n    text-indent: 1em;\n    font-size: 1em;\n\n    ::placeholder {\n        font-size: .8em;\n    }\n`;\n\nconst Button = styled.button`\n    height: 2.5rem;\n    padding: 0 1em;\n    outline: none;\n    cursor: pointer;\n    background: #222;\n    border: none;\n    color: #fff;\n    font-size: 1em;\n`;\n\nlet page = 1\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       images: [],\n       query: ''\n    }\n  }\n  \n  componentDidMount() {\n    this.fetchImages()\n  }\n\n  fetchImages = () => {\n    if (this.state.query === '') {\n      const apiRoot = 'https://api.unsplash.com';\n      axios.get(`${apiRoot}/photos/random?client_id=DtUhr98dV5Mo_RF1TRHU26mRd9ofcDRzU3sKhAuzRAA&count=10`)\n        .then((response) => {\n          this.setState({\n            images: [...this.state.images, ...response.data]\n          })\n        })\n    } else {\n      const apiRoot = 'https://api.unsplash.com';\n      page = page + 1\n      axios.get(`${apiRoot}/search/photos?client_id=DtUhr98dV5Mo_RF1TRHU26mRd9ofcDRzU3sKhAuzRAA&page=${page}&query=${this.state.query}`)\n      .then((response) => {\n        this.setState({\n          images: [...this.state.images, ...response.data.results]\n        })\n      })\n    }\n  }\n\n  handleSearch = (event) => {\n    this.setState({\n      query: event.target.value\n    }, () => {\n      var url = new URL(window.location.origin + window.location.pathname);\n      url.searchParams.append(\"search\", event?.target.value);\n      window.history.pushState(null, null, url);\n    })\n  }\n\n  searchImages = (event) => {\n    event.preventDefault()\n    const apiRoot = 'https://api.unsplash.com';\n    axios.get(`${apiRoot}/search/photos?client_id=DtUhr98dV5Mo_RF1TRHU26mRd9ofcDRzU3sKhAuzRAA&query=${this.state.query}`)\n      .then((response) => {\n        this.setState({\n          images: [...response.data.results]\n        })\n      })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Heading />\n              <form>\n                  <Input type=\"text\" placeholder=\"Search photos\" onChange={this.handleSearch}/>\n                  <Button onClick={this.searchImages}>Search</Button>\n              </form>\n              <GlobalStyle />\n              <InfiniteScroll\n                dataLength={this.state.images.length}\n                next={this.fetchImages}\n                hasMore={true}\n                loader={<Loader />}\n              >\n                <WrapperImages>\n                  {this.state.images.map(image => (\n                    <UnsplashImage url={image.urls.thumb} key={image.id} id={image.id} regular={image.urls.regular} descripition={image.alt_description} />\n                  ))}\n                </WrapperImages>\n              </InfiniteScroll>\n            </Route>\n            <Route exact path=\"/:id\">\n              <ImageComponent />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/home/mourya/Desktop/React-Infinite-Image-Gallery/src/components/Heading.js",[],"/home/mourya/Desktop/React-Infinite-Image-Gallery/src/components/Loader.js",[],"/home/mourya/Desktop/React-Infinite-Image-Gallery/src/components/UnsplashImage.js",["38","39","40","41","42","43"],"import styled from 'styled-components'\nimport React from 'react';\nimport axios from 'axios';\nimport {\n    Link\n} from \"react-router-dom\";\n\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)'\n    }\n};\n\nconst Img = styled.img`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    max-height: 400px;\n`;\n\nconst Grid = styled.div`\n    grid-template-columns: repeat(2, 1fr);\n`;\n\nconst GridItem = styled.div`\n    grid-column: span 1;\n    padding: 1rem;\n`;\n\nconst ImageItem = styled.div`\n    grid-column: span 2;\n    padding: 1rem;\n    text-align: center;\n`;\n\nconst ButtonItem = styled.div`\n    grid-column: span 1;\n    padding: 1rem;\n    text-align: right;\n`;\n\nexport const UnsplashImage = ({url, key, id, regular, descripition }) => {\n    return (\n        <>\n            <Link to={`/${id}`} ><Img src={url} key={key} alt=\"\" style={{ cursor: 'pointer' }} /></Link>\n        </>\n    )\n}\n","/home/mourya/Desktop/React-Infinite-Image-Gallery/src/components/ImageComponent.js",["44","45","46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":12},{"ruleId":"51","severity":1,"message":"55","line":12,"column":10,"nodeType":"53","messageId":"54","endLine":12,"endColumn":16},{"ruleId":"51","severity":1,"message":"56","line":17,"column":3,"nodeType":"53","messageId":"54","endLine":17,"endColumn":7},{"ruleId":"51","severity":1,"message":"57","line":3,"column":8,"nodeType":"53","messageId":"54","endLine":3,"endColumn":13},{"ruleId":"51","severity":1,"message":"58","line":8,"column":7,"nodeType":"53","messageId":"54","endLine":8,"endColumn":19},{"ruleId":"51","severity":1,"message":"59","line":26,"column":7,"nodeType":"53","messageId":"54","endLine":26,"endColumn":11},{"ruleId":"51","severity":1,"message":"60","line":30,"column":7,"nodeType":"53","messageId":"54","endLine":30,"endColumn":15},{"ruleId":"51","severity":1,"message":"61","line":35,"column":7,"nodeType":"53","messageId":"54","endLine":35,"endColumn":16},{"ruleId":"51","severity":1,"message":"62","line":41,"column":7,"nodeType":"53","messageId":"54","endLine":41,"endColumn":17},{"ruleId":"51","severity":1,"message":"63","line":10,"column":7,"nodeType":"53","messageId":"54","endLine":10,"endColumn":10},{"ruleId":"64","severity":1,"message":"65","line":87,"column":21,"nodeType":"66","endLine":87,"endColumn":51},{"ruleId":"67","severity":1,"message":"68","line":98,"column":73,"nodeType":"69","endLine":98,"endColumn":107},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'customStyles' is assigned a value but never used.","'Grid' is assigned a value but never used.","'GridItem' is assigned a value but never used.","'ImageItem' is assigned a value but never used.","'ButtonItem' is assigned a value but never used.","'Img' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]